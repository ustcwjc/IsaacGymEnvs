# used to create the object
name: StrayTerrain

physics_engine: 'physx'

env:
  numEnvs: 1
  numObservations: 55
  numActions: 14
  envSpacing: 1.  # [m]
  enableDebugVis: False

  terrain:
    terrainType: plane # none, plane, or trimesh
    staticFriction: 1.0  # [-]
    dynamicFriction: 1.0  # [-]
    restitution: 0.        # [-]
    # rough terrain only:
    curriculum: true
    maxInitMapLevel: 0
    mapLength: 8.
    mapWidth: 8.
    numLevels: 10
    numTerrains: 4
    # terrain types: [smooth slope, rough slope, stairs up, stairs down, discrete]
    terrainProportions: [0.0, 0.8, 0.0, 0.1, 0.2]
    # tri mesh only:
    slopeTreshold: 0.35 # [rad]

  baseInitState:
    pos: [0.0, 0.0, 0.32] # x,y,z [m]
    rot: [0.0, 0.0, 0.0, 1.0] # x,y,z,w [quat]
    vLinear: [0.0, 0.0, 0.0]  # x,y,z [m/s]
    vAngular: [0.0, 0.0, 0.0]  # x,y,z [rad/s]
    base_height_des: 0.3 # [m]

  randomCommandVelocityRanges:
    # train
    linear_x: [0.5, 1.0] # min max [m/s]
    linear_y: [-1.0, 1.0]   # min max [m/s]
    yaw: [-3.14, 3.14]    # min max [rad/s]

  control:
    # PD Drive parameters:
    stiffness_leg: 30.0  # [N*m/rad]
    damping_leg: 0.6   # [N*m*s/rad]
    stiffness_spine: 150.0  # [N*m/rad]
    damping_spine: 2.0   # [N*m*s/rad]
    # action scale: target angle = actionScale * action + defaultAngle
    actionScale_spine: 5       # [rad]
    actionScale_hip: 5       # [rad]
    actionScale_thigh: 5       # [rad]
    actionScale_knee: 5       # [rad]
    # decimation: Number of control action updates @ sim DT per policy DT
    decimation: 1
    feetAirTimeDesired: 0.3 # [s]
    gaitpattern: 0  # 0 is trot, 1 is bound, 2 is pace, 3 is gallop, 4 is flyingtrot
    command_adjustment_rate: 0.25  # [s]

  defaultJointAngles:  # = target angles when action = 0.0
    LF_HAA: 0.    # [rad]
    RF_HAA: 0.    # [rad]
    LH_HAA: -0.   # [rad]
    RH_HAA: -0.   # [rad]

    LF_HFE: 0.785     # [rad]
    RF_HFE: 0.785    # [rad]
    LH_HFE: 0.785     # [rad]
    RH_HFE: 0.785    # [rad]

    LF_KFE: -1.57   # [rad]
    RF_KFE: -1.57     # [rad]
    LH_KFE: -1.57    # [rad]
    RH_KFE: -1.57     # [rad]

    spine_roll: 0.  # [rad]
    spine_yaw: 0. # [rad]

  urdfAsset:
    file: "urdf/stray/urdf/stray.urdf"
    footName: calf # SHANK if collapsing fixed joint, FOOT otherwise
    calfName: calf
    thighName: thigh
    collapseFixedJoints: True
    fixBaseLink: false
    defaultDofDriveMode: 4 # see GymDofDriveModeFlags (0 is none, 1 is pos tgt, 2 is vel tgt, 4 effort)

  learn:
    allowcalfContacts: True
    # rewards
    terminalReward: 0
    linearVelocityXYRewardScale: 1.0
    linearVelocityZRewardScale: -0.25 #-1.0
    angularVelocityXYRewardScale: -0.05 #-0.05
    angularVelocityZRewardScale: 0.5
    orientationRewardScale: -1.0 #-1.
    torqueRewardScale: -0.0001 # -0.000025
    jointAccRewardScale: -0.0000025 # -0.0025
    baseHeightRewardScale: -0.0 # -5
    feetAirTimeRewardScale:  -0.0
    calfCollisionRewardScale: -1.0
    feetStumbleRewardScale: -2.0 #-2.0
    actionRateRewardScale: -0.0005
    gaitpatternRewardScale: 0.5
    powerRewardScale: -0.0000
    spineRewardScale: -0.1
    allfeetonairRewardScale: -0.
    # cosmetics
    hipRewardScale: -0.1 #25
    thighRewardScale: -0.1 #25
    kneeRewardScale: -0.0 #25

    # normalization
    linearVelocityScale: 2.0
    angularVelocityScale: 0.25
    dofPositionScale: 1.0
    dofVelocityScale: 0.05
    heightMeasurementScale: 5.0

    # noise 
    addNoise: true
    noiseLevel: 1.0 # scales other values
    dofPositionNoise: 0.01
    dofVelocityNoise: 1.5
    linearVelocityNoise: 0.1
    angularVelocityNoise: 0.2
    gravityNoise: 0.05
    heightMeasurementNoise: 0.06

    #randomization
    randomizeFriction: true
    frictionRange: [0.5, 1.25]
    pushRobots: true
    pushInterval_s: 15
    turning_s: 10

    # episode length in seconds
    episodeLength_s: 20

  # viewer cam:
  viewer:
    refEnv: 0
    pos: [-0.0, -1.0, 0.3]  # [m]
    lookat: [0., 0, 0.31]  # [m]

  # set to True if you use camera sensors in the environment
  enableCameraSensors: False

sim:
  dt: 0.005
  substeps: 2
  up_axis: "z"
  use_gpu_pipeline: ${eq:${...pipeline},"gpu"}
  gravity: [0.0, 0.0, -9.81]
  physx:
    num_threads: ${....num_threads}
    solver_type: ${....solver_type}
    use_gpu: False # set to False to run on CPU
    num_position_iterations: 4
    num_velocity_iterations: 1
    contact_offset: 0.02
    rest_offset: 0.0
    bounce_threshold_velocity: 0.2
    max_depenetration_velocity: 100.0
    default_buffer_size_multiplier: 5.0
    max_gpu_contact_pairs: 8388608 # 8*1024*1024
    num_subscenes: ${....num_subscenes}
    contact_collection: 1 # 0: CC_NEVER (don't collect contact info), 1: CC_LAST_SUBSTEP (collect only contacts on last substep), 2: CC_ALL_SUBSTEPS (broken - do not use!)

task:
  randomize: False

